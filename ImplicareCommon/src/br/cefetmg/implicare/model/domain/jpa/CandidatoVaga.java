package br.cefetmg.implicare.model.domain.jpa;
// Generated 29/11/2018 03:11:02 by Hibernate Tools 4.3.1


import br.cefetmg.implicare.model.domain.jpa.relacionamentos.CandidatoVagaId;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CandidatoVaga generated by hbm2java
 */
@Entity
@Table(name="candidato_vaga"
    ,schema="public"
)
public class CandidatoVaga  implements java.io.Serializable {


     private CandidatoVagaId id;
     private Candidato candidato;
     private Vaga vaga;
     private char statusCandidato;

    public CandidatoVaga() {
    }

    public CandidatoVaga(CandidatoVagaId id, Candidato candidato, Vaga vaga, char statusCandidato) {
       this.id = id;
       this.candidato = candidato;
       this.vaga = vaga;
       this.statusCandidato = statusCandidato;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="cpf", column=@Column(name="cpf", nullable=false) ), 
        @AttributeOverride(name="seqVaga", column=@Column(name="seq_vaga", nullable=false) ), 
        @AttributeOverride(name="codCargo", column=@Column(name="cod_cargo", nullable=false) ), 
        @AttributeOverride(name="cnpj", column=@Column(name="cnpj", nullable=false) ), 
        @AttributeOverride(name="datPublicacao", column=@Column(name="dat_publicacao", nullable=false) ) } )
    public CandidatoVagaId getId() {
        return this.id;
    }
    
    public void setId(CandidatoVagaId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cpf", nullable=false, insertable=false, updatable=false)
    public Candidato getCandidato() {
        return this.candidato;
    }
    
    public void setCandidato(Candidato candidato) {
        this.candidato = candidato;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="cod_cargo", referencedColumnName="cod_cargo", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="seq_vaga", referencedColumnName="seq_vaga", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="cnpj", referencedColumnName="cnpj", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="dat_publicacao", referencedColumnName="dat_publicacao", nullable=false, insertable=false, updatable=false) } )
    public Vaga getVaga() {
        return this.vaga;
    }
    
    public void setVaga(Vaga vaga) {
        this.vaga = vaga;
    }

    
    @Column(name="status_candidato", nullable=false, length=1)
    public char getStatusCandidato() {
        return this.statusCandidato;
    }
    
    public void setStatusCandidato(char statusCandidato) {
        this.statusCandidato = statusCandidato;
    }




}


